name: Build and Publish VSIX

on:
  push:
    tags:
      - "v*" # Runs when you push a tag like v1.0.0

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build VSIX package
        run: npm run package

      - name: Find the VSIX file
        id: find-vsix
        run: echo "VSIX_FILE=$(ls *.vsix | head -n 1)" >> $GITHUB_ENV

      - name: Get commits since last release
        id: commits
        run: |
          git fetch --tags --unshallow || git fetch --tags

          REPO_URL="https://github.com/${{ github.repository }}"
          CURRENT_TAG=${GITHUB_REF##*/}

          PREV_TAG=$(git tag --sort=-creatordate | grep -v "^$CURRENT_TAG$" | head -n 1)
          echo "Current tag: $CURRENT_TAG"
          echo "Previous tag: $PREV_TAG"

          if [ -z "$PREV_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- [%h]($REPO_URL/commit/%H) %s (%an)" --no-merges)
          else
            # ^ after tag means start from the commit *after* the tag
            COMMITS=$(git log "$PREV_TAG"^..HEAD --pretty=format:"- [%h]($REPO_URL/commit/%H) %s (%an)" --no-merges)
          fi

          echo "$COMMITS" > commits.txt
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat commits.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.VSIX_FILE }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Automated release of version ${{ github.ref_name }}

            ${{ steps.commits.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
